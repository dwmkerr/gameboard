version: 2
jobs:
  build:
    working_directory: ~/project
    docker:
      - image: circleci/node:8
    steps:
      - checkout
      - run: yarn
      - run: yarn run test
      - run: cd ~/project/artifacts/coverage && bash <(curl -s https://codecov.io/bash)
      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules
      - store_test_results:
          path: ~/project/artifacts/tests/junit.xml

  android:
    working_directory: ~/project
    docker:
      - image: circleci/android:api-27-node8-alpha
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: ~/project
      - run: BUILD_NUM=$CIRCLE_BUILD_NUM ./scripts/version.sh
      - run: bundle install
      - run: bundle exec fastlane android build
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./artifacts/android
      - store_artifacts:
          path: ~/project/artifacts/android
      - store_test_results:
          path: ~/project/android/reports

  ios:
    macos:
      xcode: "9.0"
    working_directory: /Users/distiller/project
    environment:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      FL_OUTPUT_DIR: /Users/distiller/project/output
    shell: /bin/bash --login -o pipefail
    steps:
      - checkout:
          path: /Users/distiller/project
      - attach_workspace:
          at: /Users/distiller/project
      - run:
          name: Set Ruby Version
          command:  echo "ruby-2.4" > ~/.ruby-version
      # Not using a workspace here as Node and Yarn versions
      # differ between the macOS image and the Docker containers above.
      - run: BUILD_NUM=$CIRCLE_BUILD_NUM ./scripts/version.sh
      - run: yarn
      - run: bundle install
      - run: bundle exec fastlane ios build
      # Disabling test report stuff for now.
      # - run:
      #  command: cp $FL_OUTPUT_DIR/scan/report.junit $FL_OUTPUT_DIR/scan/results.xml || true
      #  when: always
      - persist_to_workspace:
          root: ~/project
          paths:
            - ./artifacts/ios
      - store_artifacts:
          path: /Users/distiller/project/artifacts/ios
      - store_test_results:
          path: /Users/distiller/project/output/scan

  # Pushes the built app artifacts to testfairy.
  release-testfairy:
    working_directory: ~/project
    docker:
      - image: circleci/node:8
    steps:
      - checkout:
          path: ~/project
      - attach_workspace:
          at: ~/project
      - run: ./scripts/testfairy-upload.sh ./artifacts/android/GameBoard.apk
      - run: ./scripts/testfairy-upload.sh ./artifacts/ios/GameBoard.ipa

workflows:
  version: 2
  node-android-ios:
    jobs:
      - build
      - android:
          requires:
            - build
      - ios:
          requires:
            - build
      - release-testfairy:
          requires:
            - ios
            - android
